import React, { useEffect, useState, useMemo } from "react";
import Head from "next/head";
import {
  getAuthentication,
  fetchDataRestaurant,
  fetchGetTable,
  fetchGetWaiters,
  GetReservedTimeZone,
} from "../../../AllFetchApi/index";
import { useRouter } from "next/router";
import NavBarReserver from "../../../components/navbar/NavBarReserver";
import Lunch from "../../../components/orari/Lunch";
import Dinner from "../../../components/orari/Dinner";

export default function HomeRestaurant() {
  const router = useRouter();
  const { id, timezone, day } = router.query;
  const [data, setData] = useState([]);
  const [selectedDate, setSelectDate] = useState(new Date());
  const [daySelected, setDaySelected] = useState(false);
  const [allReservedTimeZone, setAllReservedTimeZone] = useState();

  useEffect(() => {
    getAuthentication()
      .then((resp) => {
        fetchDataRestaurant(id, setData);
        GetReservedTimeZone(id, day, /* , timezone,*/ setAllReservedTimeZone);
        console.log("siamo sulla pagina [day]");
      })
      .catch((e) => {
        router.push("/");
      });
  }, [selectedDate, daySelected, id]);

  const timeZoneLunch = allReservedTimeZone?.filter(
    (zone) => zone.timezone === "lunch"
  );

  const timeZoneDinner = allReservedTimeZone?.filter(
    (zone) => zone.timezone === "dinner"
  );

  return (
    <>
      <Head>
        <title>TControl</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icono-app.ico" />
      </Head>
      <NavBarReserver
        data={data}
        selectedDate={selectedDate}
        setSelectDate={setSelectDate}
        id={id}
        daySelected={daySelected}
        setDaySelected={setDaySelected}
      />
      {timezone === "lunch" ? (
        <Lunch
          daySelected={daySelected}
          timeZoneLunch={timeZoneLunch}
          id={id}
          day={day}
        />
      ) : (
        <Dinner
          daySelected={daySelected}
          timeZoneDinner={timeZoneDinner}
          id={id}
          day={day}
        />
      )}
    </>
  );
}

/* {
  timezone === "lunch" ? (
    <Lunch
      daySelected={daySelected}
      id={id}
      day={day}
      /*  allTables={allTables}
      allWaiters={allWaiters}
     />
  ) : (
     <Dinner
      daySelected={daySelected}
      id={id}
      day={day}
      /* allTables={allTables}
      allWaiters={allWaiters}
     />
  );
} */
